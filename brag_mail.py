#!/usr/bin/env python3
# coding=utf-8
"""
Sends BRAG reminders via Mandrill
"""
from __future__ import unicode_literals
from __future__ import absolute_import
import mandrill
from brag import Brag
import os
import sys

__author__ = "Manuel Ebert"
__copyright__ = "Copyright 2016, Manuel Ebert"
__date__ = "2016-02-22"
__email__ = "manuel@1450.,e"

TEMPLATE = """
Dear {username},

Today is Thursday, two more days to get your shit together and be productive. Gentle automated reminder, here are your tasks for this week:
{tasks}

This email was automatically generated by BRAGMaster 3000 - https://github.com/maebert/bragmaster
"""

if __name__ == "__main__":
    brag_file = os.environ.get('BRAG_FILE', None)
    if not brag_file:
        print("You need to specify the $BRAG_FILE variable")
        sys.exit(2)
    mandrill_key = os.environ.get('MANDRILL_KEY', None)
    if not mandrill_key:
        print("You need to specify the $MANDRILL_KEY variable")
        sys.exit(2)
    
    mandrill_client = mandrill.Mandrill(mandrill_key)
    brag = Brag.from_file(brag_file)
    current_session = max(brag.get_session_names())

    print("Scheduling 'Brag reminder - Session {}'".format(len(brag.get_session_names())))
    for user in brag.users:
        if not user.email:
            print("No e-mail address provided for {}.".format(user.name))
            continue
        
        print("- Scheduling email to {}...".format(user.name))
        
        user_session = user.get_session(current_session)
        if not user_session:
            print("  - User didn't contribute to this session")
            continue
        
        tasks = "\n".join(str(user_session).splitlines()[1:])

        message = {
            'from_email': 'manuel@1450.me',
            'from_name': 'Manuel Ebert',
            'text': TEMPLATE.format(username=user.name, tasks=tasks),
            'subject': "Brag reminder - Session {}".format(len(brag.get_session_names())),
            'to': [{'email': user.email,
                    'name': user.name,
                    'type': 'to'}]
        }
        result = mandrill_client.messages.send(message=message)
        if result[0].get("reject_reason"):
            print("  - ERROR: {}".format(result[0]['reject_reason']))
